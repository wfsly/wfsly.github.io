---
layout: post
title: 正则表达式
date: 2017-09-08 00:11:12
categories: dev
---

正则表达式由普通字符加特殊字符组成，特殊字符又叫元字符

表达式内不包括任何元字符，那这就是普通的纯文本匹配

# 元字符

## 行的起始和结束
`^`: 行的起始或开头
`$`: 行的结束或末尾
这两个元字符，匹配的是位置，而不是文本

## 字符组
`[]`: 字符组，表达式的结构体，匹配若干字符之一。它允许使用者在某处列出期望匹配的字符
`-`: 连字符，在字符组中表示一个范围，[1-6]等价于[123456]。多重范围是允许的[0-9a-z],
    且顺序无所谓[a-z0-9], 并且可以与普通文本结合[0-9_?*.!],`-`只有在字符组里才是
    元字符，?.在字符组里则是普通字符。字符组里的内部和外部，元字符的规定是不同的
`[^]`: 排除型字符组，匹配任何未在字符组中列出的字符. `^`在字符组内的意义不是行的起始

## 多选结构

`|`: 简捷的元字符，表示“或”(or)的意思，依靠他能把不同的子表达式组合成一个总表达式
比如Bob和Robert是两个表达式, Bob|Robert就是能够同时匹配其中任意一个表达式。在这样组合
中，子表达式被称为多选分支(alternative).
`(|)`: 多选结构外套上括号，来规定多选结构的范围。

## 单词分界符

`<>`:

## 可选项元素

`?`: 问号代表可选项, 把它加在一个字符的后面，就表示此处容许出现这个字符，不过它的出现并非匹配成功的必要条件。`?`
    只作用于之前紧邻的字符，这个字符也可以是用`()`包起来的整体。eg `colou?r`此表达式会匹配`color`或`colour`,
    `July 4(th)?`此表达式会匹配`July 4`或`July 4th`, 括号里的作为一个整体被?修饰。

## 其他量词：重复出现
`+`: 元字符`+`表示“之前紧邻的元素出现一次或者多次”。匹配尽可能多的次数，但如果连一次匹配都无法完成，则失败。
`*`: 元字符`*`表示“之前出现的元素出现任意多次，或者不出现”。匹配尽可能多的次数，如果实在无法匹配也不要紧。
eg: `[0-9a-z]+@[a-z.]+` 将会匹配到`wangfushu1992@gmail.com`, 但是`@`前后没有字符则无法匹配到@,
    `[0-9a-z]*@[a-z.]*` 可以同时匹配到`wangfushu1992@gmail.com` 和`@`

`? + *` 统称为量词，因为他们限定了所作用元素的匹配次数。


## 规定重现次数的范围：区间

`{min,max}`: 这称为区间量词。eg: [0-9]{2,5}, 数字能够允许重现的次数在2到5之间。问好对应的区间量词是{0,1}

## 括号及反向作用

括号的作用：1.限制多选项的范围，2.将若干字符组合成一个单元，受问号，加号和星号等量词的作用。


## 神奇的转义

`\`: 转义符，如果想匹配的字符中包括元字符，则需要在元字符前加`\`斜杠，就可以匹配到元字符了。但是当转义符出现在
    字符组中时，则不会转义，只作为普通字符
